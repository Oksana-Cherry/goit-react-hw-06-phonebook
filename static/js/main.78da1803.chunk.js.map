{"version":3,"sources":["components/Filter/Filter.module.css","redux/contacts/contact-actions.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/contacts/contact-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","contactActions","addContact","createAction","name","number","payload","id","uuid","deleteContact","changeFilterName","ContactForm","state","handleChange","e","target","value","setState","handleSubmit","event","props","contacts","onSubmit","preventDefault","undefined","find","contact","alert","resetForm","this","className","styles","Forms","Form_label","Form_input","type","placeholder","onChange","Form_button","Component","connect","dispatch","ContactListItem","onDelete","List_item","List_button","onClick","getVisibleContacts","filter","toLowerCase","includes","length","List","map","Title","Title_input","App","items","createReducer","_","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.78da1803.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Title\":\"Filter_Title__ePmhf\",\"Title_input\":\"Filter_Title_input__2eX0e\"};","import { createAction } from '@reduxjs/toolkit';\r\n//import { v4 as uuidv4 } from 'uuid';\r\nimport { v4 as uuid } from 'uuid';\r\nconst addContact = createAction('contacts/add', (name, number) => ({\r\n  payload: {\r\n    name,\r\n    number,\r\n    id: uuid(),\r\n  },\r\n}));\r\n\r\n//console.log(addContact(12345));\r\n\r\nconst deleteContact = createAction('contacts/delete');\r\nconst changeFilterName = createAction('contacts/filter');\r\n\r\nconst contactActions = {\r\n  addContact,\r\n  deleteContact,\r\n  changeFilterName,\r\n};\r\n\r\nexport default contactActions;\r\n","import React, { Component } from 'react';\r\nimport styles from './ContactForm.module.css';\r\n\r\nimport { connect } from 'react-redux';\r\nimport contactActions from '../../redux/contacts/contact-actions';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  handleSubmit = event => {\r\n    const { name, number } = this.state;\r\n    const { contacts, onSubmit } = this.props;\r\n\r\n    event.preventDefault();\r\n\r\n    const isExistContact = contacts.find(contact => contact.name === name);\r\n\r\n    if (isExistContact !== undefined) {\r\n      alert(`${name}is already in the Phonebook`);\r\n      return;\r\n    }\r\n\r\n    onSubmit(name, number);\r\n    if (!name || !number) {\r\n      alert(`Some field is empty`);\r\n\r\n      return false;\r\n    }\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n  //handleSubmit = e => {\r\n  //  e.preventDefault();\r\n\r\n  // const { name, number } = this.state;\r\n  //const { onAdd } = this.props;\r\n\r\n  //const isValidatedForm = this.validateForm();\r\n\r\n  //if (!isValidatedForm) return;\r\n  //onAdd({ id: uuid(), name, number });\r\n  //this.resetForm();\r\n  //};\r\n  // handleCheckUnique = name => {\r\n  // проверка\r\n  // const { contacts } = this.state;\r\n  //console.log(contacts);\r\n  // const isExistContact = !!contacts.find(contact => contact.name === name);\r\n\r\n  //  isExistContact && alert(`${name}is already in the Phonebook`);\r\n  //  return !isExistContact;\r\n  //};\r\n\r\n  /*validateForm = () => {\r\n    const { name, number } = this.state;\r\n    const { onCheckUnique } = this.props;\r\n    if (!name || !number) {\r\n      alert(`Some field is empty`);\r\n\r\n      return false;\r\n    }\r\n    return onCheckUnique(name);\r\n  };*/\r\n\r\n  resetForm = () => this.setState(this.state);\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={styles.Forms} onSubmit={this.handleSubmit}>\r\n        <label className={styles.Form_label}>\r\n          Name\r\n          <input\r\n            className={styles.Form_input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={styles.Form_label}>\r\n          Number\r\n          <input\r\n            className={styles.Form_input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            placeholder=\"\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button className={styles.Form_button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = ({ contacts }) => ({\r\n  contacts: contacts.contacts,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) => dispatch(contactActions.addContact(name, number)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\nimport contactActions from '../../redux/contacts/contact-actions';\r\n\r\nconst ContactListItem = ({ id, name, number, onDelete }) => {\r\n  return (\r\n    <li className={styles.List_item} key={id}>\r\n      <p>{name + ': ' + number}</p>\r\n      <button className={styles.List_button} onClick={() => onDelete(id)}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst ContactList = ({ contacts, onDelete }) => {\r\n  if (contacts.length === 0) return null;\r\n\r\n  return (\r\n    <ul className={styles.List}>\r\n      {contacts.map(contact => (\r\n        <ContactListItem key={contact.id} {...contact} onDelete={onDelete} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nconst getVisibleContacts = (contacts, filter) => {\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n};\r\nconst mapStateToProps = ({ contacts: { contacts, filter } }) => ({\r\n  contacts: getVisibleContacts(contacts, filter),\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDelete: id => dispatch(contactActions.deleteContact(id)),\r\n});\r\nContactList.propTypes = {\r\n  //onDelete: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    }),\r\n  ).isRequired,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport contactActions from '../../redux/contacts/contact-actions';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ filter, onChange }) => {\r\n  return (\r\n    <label className={styles.Title}>\r\n      Find contacts by name\r\n      <input\r\n        className={styles.Title_input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts }) => ({\r\n  filter: contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(contactActions.changeFilterName(e.target.value)),\r\n});\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n  filter: PropTypes.string,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","//import { Component } from 'react';\r\nimport ContactForm from './components/ContactForm';\r\nimport ContactList from './components/ContactList/';\r\nimport Filter from './components/Filter';\r\n\r\nconst App = () => (\r\n  <>\r\n    <h1>Phonebook</h1>\r\n\r\n    <ContactForm />\r\n\r\n    <h2>Contacts</h2>\r\n\r\n    <Filter />\r\n\r\n    <ContactList />\r\n  </>\r\n);\r\n\r\nexport default App;\r\n\r\n/*class App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    number: '',\r\n    filter: '',\r\n  };\r\n\r\n  handleContact = newContact =>\r\n    this.setState(({ contacts }) => ({ contacts: [...contacts, newContact] }));\r\n\r\n  handleCheckUnique = name => {\r\n    // проверка\r\n    const { contacts } = this.state;\r\n    console.log(contacts);\r\n    const isExistContact = !!contacts.find(contact => contact.name === name);\r\n\r\n    isExistContact && alert(`${name}is already in the Phonebook`);\r\n    return !isExistContact;\r\n  };\r\n\r\n  handleDeleteContact = id =>\r\n    this.setState(({ contacts }) => ({\r\n      contacts: contacts.filter(contact => contact.id !== id),\r\n    }));\r\n\r\n  handleFilterChange = filter => this.setState({ filter });\r\n\r\n  getVisibleContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n  const visibleContacts = this.getVisibleContacts();\r\n\r\n    return (\r\n      <>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onAdd={this.handleContact} onCheckUnique={this.handleCheckUnique}/>\r\n        \r\n        <h2>Contacts</h2>\r\n        <Filter filter={filter} onChange={this.handleFilterChange}/>\r\n        \r\n        <ContactList  contacts={visibleContacts} onDelete={this.handleDeleteContact} />\r\n       \r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default App;*/\r\n","//const addContact=\r\nimport { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport contactActions from './contact-actions';\r\nconst initialState = {\r\n  contacts: [\r\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n  ],\r\n};\r\nconst items = createReducer(initialState.contacts, {\r\n  [contactActions.addContact]: (state, { payload }) => [...state, payload],\r\n  [contactActions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [contactActions.changeFilterName]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts: items,\r\n  filter: filter,\r\n});\r\n","/*import { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst reducer = (state = {}, action) => state;\r\n\r\nconst store = createStore(reducer, composeWithDevTools());\r\nexport default store;*/\r\n/*import { combineReducers } from 'redux';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts,\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\nexport default store;*/\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactReducer from './contacts/contact-reducer';\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst middleware = getDefaultMiddleware =>\r\n  getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }).concat(logger);\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactReducer),\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware,\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { store, persistor } from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Forms\":\"ContactForm_Forms__efxFX\",\"Form_label\":\"ContactForm_Form_label__25Qrk\",\"Form_input\":\"ContactForm_Form_input__2TLpD\",\"Forminput\":\"ContactForm_Forminput__rIi_E\",\"Form_button\":\"ContactForm_Form_button__3g-Lg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"ContactList_List__2HGqu\",\"List_item\":\"ContactList_List_item__ualwd\",\"List_button\":\"ContactList_List_button__3YLzS\"};"],"sourceRoot":""}